version: "3.7"

volumes:
  postgres-data:
  redis-data:
  shared_volume:

networks:
  go-app-network:
    driver: bridge

services:
  db:
    image: postgres:16.0
    container_name: "for-9-may-database"
    env_file:
      - .env
    networks:
      - go-app-network
    ports:
      - $POSTGRES_PORT:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 1s
      timeout: 60s
      retries: 60
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:alpine3.19
    container_name: "for-9-may-redis"
    networks:
      - go-app-network
    ports:
      - $REDIS_PORT:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis-data:/data

  jaeger:
    container_name: "for-9-may-jaeger"
    networks:
      - go-app-network
    image: jaegertracing/jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
      - "8888:8888"
      - "8889:8889"
      - "4317:4317"
      - "4318:4318"

  for-9-may-app1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "for-9-may-app1"
    env_file:
      - .env
    environment:
      SERVER_HTTP_PORT: 8081
      POSTGRES_HOST: db
      REDIS_HOST: redis
      POSTGRES_PORT: 5432
      REDIS_PORT: 6379
      JAEGER_PORT: 14268
      JAEGER_HOST: jaeger
    ports:
      - "8081:8081"
    networks:
      - go-app-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - shared_volume:/app/upload

  for-9-may-app2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "for-9-may-app2"
    env_file:
      - .env
    environment:
      SERVER_HTTP_PORT: 8082
      POSTGRES_HOST: db
      REDIS_HOST: redis
      POSTGRES_PORT: 5432
      REDIS_PORT: 6379
      JAEGER_PORT: 14268
      JAEGER_HOST: jaeger
    ports:
      - "8082:8082"
    networks:
      - go-app-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - shared_volume:/app/upload

  for-9-may-app3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "for-9-may-app3"
    env_file:
      - .env
    environment:
      SERVER_HTTP_PORT: 8083
      POSTGRES_HOST: db
      REDIS_HOST: redis
      POSTGRES_PORT: 5432
      REDIS_PORT: 6379
      JAEGER_PORT: 14268
      JAEGER_HOST: jaeger
    ports:
      - "8083:8083"
    networks:
      - go-app-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - shared_volume:/app/upload
